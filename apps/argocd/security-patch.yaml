---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: argocd-application-controller
  annotations:
    checkov.io/skip1: |
      CKV_K8S_35=I do not want to work the secrets to be files.
    checkov.io/skip2: |
      CKV_K8S_38=These pods need the service account token.
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 12000
        runAsGroup: 12000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: argocd-application-controller
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-application-controller
  annotations:
    checkov.io/skip1: |
      CKV_K8S_49=The application-controller needs to see all state and control all argo stuff.
    checkov.io/skip2: |
      CKV_K8S_155=The application-controller needs to control all argo stuff.
    checkov.io/skip3: |
      CKV_K8S_156=The application-controller needs to be able to create all resources for apps.
    checkov.io/skip4: |
      CKV_K8S_157=The application-controller needs to be able to create RBAC resources for apps.
    checkov.io/skip5: |
      CKV_K8S_158=The application-controller needs to be able to create RBAC resources for apps.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-notifications-controller
  annotations:
    checkov.io/skip1: |
      CKV_K8S_38=These pods need the service account token.
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 12001
        runAsGroup: 12001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: argocd-notifications-controller
          readinessProbe:
            tcpSocket:
              port: 9001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-applicationset-controller
  annotations:
    checkov.io/skip1: |
      CKV_K8S_38=These pods need the service account token.
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 12002
        runAsGroup: 12002
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: argocd-applicationset-controller
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-redis
  annotations:
    checkov.io/skip1: |
      CKV_K8S_35=I do not want to work the secrets to be files.
    checkov.io/skip2: |
      CKV_K8S_38=These pods need the service account token.
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 12003
        runAsGroup: 12003
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: redis
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -a $(REDIS_PASSWORD) ping
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -a $(REDIS_PASSWORD) ping

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  annotations:
    checkov.io/skip1: |
      CKV_K8S_35=I do not want to work the secrets to be files.
spec:
  template:
    spec:
      securityContext:
        fsGroup: 12004
        runAsNonRoot: true
        runAsUser: 12004
        runAsGroup: 12004
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: copyutil
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true
        - name: download-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true
      containers:
        - name: argocd-repo-server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  annotations:
    checkov.io/skip1: |
      CKV_K8S_35=I do not want to work the secrets to be files.
    checkov.io/skip2: |
      CKV_K8S_38=Needs the service account token to control application server and get system state.
spec:
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 12005
        runAsGroup: 12005
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: argocd-server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-server
  annotations:
    checkov.io/skip1: |
      CKV_K8S_49=The server needs to see all state and control all argo stuff.
    checkov.io/skip2: |
      CKV_K8S_155=The server needs to control all argo stuff.
